version: "3.9"

volumes:
  postgres_data:
  n8n_data:

services:
  postgres:
    image: postgres:15-alpine
    container_name: n8n_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      TZ: ${TZ}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  n8n:
    image: n8nio/n8n:1.77.0
    container_name: n8n_app
    restart: unless-stopped
    command: >
      sh -c "n8n migrate:database && n8n start"
    ports:
      - "5678:5678"
    environment:
      # --- Core URL config for local access ---
      N8N_HOST: ${N8N_HOST:-localhost}
      N8N_PROTOCOL: http
      N8N_PORT: 5678
      N8N_EDITOR_BASE_URL: ${N8N_EDITOR_BASE_URL:-http://localhost:5678/}
      N8N_WEBHOOK_URL: ${N8N_WEBHOOK_URL:-http://localhost:5678/}
      WEBHOOK_URL: ${WEBHOOK_URL:-http://localhost:5678/}
      # --- Timezone ---
      GENERIC_TIMEZONE: ${TZ}
      TZ: ${TZ}
      # --- Auth hardening (UI Basic Auth) ---
      N8N_BASIC_AUTH_ACTIVE: "true"
      N8N_BASIC_AUTH_USER: ${N8N_BASIC_AUTH_USER}
      N8N_BASIC_AUTH_PASSWORD: ${N8N_BASIC_AUTH_PASSWORD}
      # --- Encryption key (protects credentials at rest) ---
      N8N_ENCRYPTION_KEY: ${N8N_ENCRYPTION_KEY}
      # --- Ensure config permissions are corrected automatically ---
      N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS: "true"
      # --- DB connection ---
      DB_TYPE: postgresdb
      DB_POSTGRESDB_HOST: postgres
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_DATABASE: ${POSTGRES_DB}
      DB_POSTGRESDB_USER: ${POSTGRES_USER}
      DB_POSTGRESDB_PASSWORD: ${POSTGRES_PASSWORD}
      # --- Executions & data retention (tune to taste) ---
      EXECUTIONS_DATA_SAVE_ON_ERROR: all
      EXECUTIONS_DATA_SAVE_ON_SUCCESS: none
      EXECUTIONS_DATA_SAVE_MANUAL_EXECUTIONS: true
      EXECUTIONS_DATA_PRUNE: true
      EXECUTIONS_DATA_MAX_AGE: 168   # hours (7 days)
    depends_on:
      - postgres
    volumes:
      - n8n_data:/home/node/.n8n

  # ---- Nightly Postgres backups to ./backups/postgres ----
  pg_backup:
    image: prodrigestivill/postgres-backup-local:16
    container_name: n8n_pg_backup
    restart: unless-stopped
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      SCHEDULE: "0 18 * * *"   # Every day 18:00 local time
      BACKUP_KEEP_DAYS: "7"
      BACKUP_KEEP_WEEKS: "4"
      BACKUP_KEEP_MONTHS: "3"
      TZ: ${TZ}
    volumes:
      - ./backups/postgres:/backups
    depends_on:
      - postgres

  # ---- Nightly tarball of the n8n_data volume to ./backups/n8n ----
  n8n_data_backup:
    image: alpine:3.20
    container_name: n8n_data_backup
    restart: unless-stopped
    command: >
      sh -c '
        set -eu
        apk add --no-cache tzdata >/dev/null
        mkdir -p /backups
        cat <<"INNER" > /etc/crontabs/root
        SHELL=/bin/sh
        PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
        0 18 * * * tar -czf /backups/n8n-data-\$(date +\%Y\%m\%d-\%H\%M).tar.gz -C /data . >> /var/log/cron.log 2>&1
        INNER
        touch /var/log/cron.log
        crond -f -L /dev/stdout
      '
    environment:
      - TZ=${TZ}
    volumes:
      - n8n_data:/data:ro
      - ./backups/n8n:/backups
    depends_on:
      - n8n
