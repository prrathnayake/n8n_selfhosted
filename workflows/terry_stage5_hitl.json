{
  "name": "Terry Stage5 Human in the Loop",
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "nodes": [
    {
      "parameters": {
        "triggerTimes": {
          "item": [
            {
              "minute": 0,
              "hour": 0
            }
          ]
        }
      },
      "id": "3f2979e6-ad96-428d-b74a-43a68d9fed3f",
      "name": "Schedule Terry",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1,
      "position": [
        -1320,
        -20
      ]
    },
    {
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "3a3aaf6d-ba6a-44b3-a834-dd182bf98ebc",
              "name": "websiteUrl",
              "type": "string",
              "value": "={{ $env.TERRY_WEBSITE_URL ?? 'http://localhost:8090' }}"
            },
            {
              "id": "4e7a2b4f-63a7-4354-91f3-4fd0577bde40",
              "name": "chatId",
              "type": "string",
              "value": "terry-stage5"
            },
            {
              "id": "8ea9b843-2cd0-4cf6-a44b-6ab5eaa5fd85",
              "name": "telegramChatId",
              "type": "string",
              "value": "={{ $env.TERRY_TELEGRAM_CHAT_ID ?? '' }}"
            },
            {
              "id": "4ba236ff-d04f-4265-813d-6b1e28184184",
              "name": "prompt",
              "type": "string",
              "value": "You are Terry, NetworkChuck's trusted AI Site Reliability Engineer. Continuously monitor {{ $json.websiteUrl }}. Explain each action before you run it. You may use the Website Availability, Homelab Shell, and Think tools. Only run commands that change the system after obtaining explicit human approval. When you need approval, set needs_approval to true, populate approval_message with the exact request, and list every command in commands_to_run. When you take action, describe it in actions_taken. Always populate notification_message so humans understand the outcome. If you require guidance, set feedback to true."
            }
          ]
        }
      },
      "id": "397f7f46-59cc-4478-824b-b8a73b185b1e",
      "name": "Set Stage 5 Context",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -1080,
        -20
      ]
    },
    {
      "parameters": {
        "toolDescription": "Verify the monitored website and capture HTTP status/response text.",
        "url": "={{ $json.websiteUrl }}",
        "responseFormat": "string",
        "options": {}
      },
      "id": "9aab7a78-7555-450b-8569-97cd72b80a92",
      "name": "Website Availability",
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        -480,
        280
      ]
    },
    {
      "parameters": {
        "description": "Execute the approved homelab command workflow. Supply a `command` string when invoking.",
        "source": "parameter",
        "workflowJson": "{\"name\": \"Subflow \\u2014 SSH Exec (command passthrough)\", \"active\": false, \"settings\": {\"executionOrder\": \"v1\"}, \"nodes\": [{\"parameters\": {\"inputSource\": \"passthrough\"}, \"id\": \"b0b68b39-2270-4f54-a566-71ea37dc0f0c\", \"name\": \"When Executed by Another Workflow\", \"type\": \"n8n-nodes-base.executeWorkflowTrigger\", \"typeVersion\": 1.1, \"position\": [-600, 200]}, {\"parameters\": {\"operation\": \"executeCommand\", \"command\": \"={{ $json.command }}\", \"options\": {}}, \"id\": \"2d08b646-7ec0-4f94-9055-407d3d5da8f0\", \"name\": \"SSH Exec\", \"type\": \"n8n-nodes-base.ssh\", \"typeVersion\": 2, \"position\": [-240, 200], \"credentials\": {\"ssh\": {\"id\": \"__REPLACE_WITH_SSH_CREDENTIAL_ID__\", \"name\": \"SSH (set me after import)\"}}}, {\"parameters\": {\"jsCode\": \"const item = $input.first();\\nconst output = item.json || {};\\nconst command = output.command ?? $json.command ?? '';\\nreturn [{\\n  json: {\\n    command,\\n    stdout: output.stdout ?? output.data ?? '',\\n    stderr: output.stderr ?? output.error ?? '',\\n    exitCode: output.exitCode ?? output.code ?? null\\n  }\\n}];\", \"options\": {}}, \"id\": \"a0e86bfd-77f1-4c9f-9a1c-8c075dcb39fd\", \"name\": \"Format Response\", \"type\": \"n8n-nodes-base.code\", \"typeVersion\": 1.4, \"position\": [0, 200]}], \"connections\": {\"When Executed by Another Workflow\": {\"main\": [[{\"node\": \"SSH Exec\", \"type\": \"main\", \"index\": 0}]]}, \"SSH Exec\": {\"main\": [[{\"node\": \"Format Response\", \"type\": \"main\", \"index\": 0}]]}}, \"pinData\": {}, \"tags\": []}"
      },
      "id": "de148712-c403-4df4-9058-493941cbc344",
      "name": "Homelab Shell Tool",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        -240,
        280
      ]
    },
    {
      "parameters": {
        "description": "Pause to think through risky changes, validation steps, or creative mitigations before you act."
      },
      "id": "0a954ddc-c025-48fd-95b3-91b45bca65b3",
      "name": "Think",
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "typeVersion": 1.1,
      "position": [
        -720,
        300
      ]
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o"
        },
        "options": {
          "temperature": 0.35
        }
      },
      "id": "d47b6fe2-2f97-49e6-95d3-3d75e8874698",
      "name": "Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -1080,
        280
      ],
      "credentials": {}
    },
    {
      "parameters": {
        "memoryKey": "terryStage5",
        "options": {
          "historyLength": 10
        }
      },
      "id": "c0d2284c-e674-418c-9105-ae57b2e703e8",
      "name": "Simple Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -900,
        280
      ]
    },
    {
      "parameters": {
        "jsonSchema": "{\"type\": \"object\", \"properties\": {\"status\": {\"type\": \"string\", \"description\": \"Overall website health summary\"}, \"summary\": {\"type\": \"string\"}, \"actions_taken\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}}, \"commands_to_run\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}}, \"needs_approval\": {\"type\": \"boolean\"}, \"approval_message\": {\"type\": \"string\"}, \"notify\": {\"type\": \"boolean\"}, \"notification_message\": {\"type\": \"string\"}, \"feedback\": {\"type\": \"boolean\"}}, \"required\": [\"status\", \"summary\", \"needs_approval\", \"commands_to_run\", \"approval_message\", \"notify\", \"notification_message\"]}",
        "autoFix": true
      },
      "id": "1caf82d1-8810-43cb-9896-6b76186be34c",
      "name": "Structured Output",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        -540,
        -200
      ]
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "={{ $json.prompt }}",
          "maxIterations": 16
        }
      },
      "id": "43d2ed77-14cd-47da-b458-f5e7bd2ea0f9",
      "name": "Terry Stage 5 Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        -720,
        -20
      ]
    },
    {
      "parameters": {
        "options": {},
        "conditions": {
          "options": {
            "version": 2,
            "caseSensitive": true,
            "typeValidation": "loose"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "68ea31a8-a1fc-4b82-938d-924584185c8c",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              },
              "leftValue": "={{ $json.needs_approval }}",
              "rightValue": ""
            }
          ]
        }
      },
      "id": "ad5b467b-7429-486a-8f15-02055ed2f8a3",
      "name": "Needs Approval?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -180,
        -200
      ]
    },
    {
      "parameters": {
        "options": {},
        "conditions": {
          "options": {
            "version": 2,
            "caseSensitive": true,
            "typeValidation": "loose"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "e92bbc94-b438-4f1a-bda5-7854a44210c9",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              },
              "leftValue": "={{ $json.notify }}",
              "rightValue": ""
            }
          ]
        }
      },
      "id": "fdfe5d0d-4957-4151-ac30-0d4f5b838b43",
      "name": "Notify?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -180,
        120
      ]
    },
    {
      "parameters": {
        "jsCode": "const context = $items('Set Stage 5 Context')[0]?.json || {};\nconst commands = ($json.commands_to_run || []).map(cmd => `\u2022 ${cmd}`).join('\\n') || 'No commands provided.';\nreturn [{ json: {\n  chatId: context.telegramChatId,\n  text: `\ud83d\udea8 Terry needs approval!\\n\\n${$json.approval_message}\\n\\nPlanned commands:\\n${commands}`\n} }];"
      },
      "id": "3b5bd6c6-f74d-4a2a-ba82-a129837ff0a8",
      "name": "Format Approval Message",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1.4,
      "position": [
        120,
        -320
      ]
    },
    {
      "parameters": {
        "resource": "message",
        "operation": "sendMessage",
        "chatId": "={{ $json.chatId }}",
        "text": "={{ $json.text }}"
      },
      "id": "64b85bdc-a22b-4283-8d73-2460a8389175",
      "name": "Telegram Approval",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        360,
        -320
      ],
      "credentials": {
        "telegramApi": {
          "id": "__REPLACE_WITH_TELEGRAM_CREDENTIAL_ID__",
          "name": "Telegram (set me after import)"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "\nconst context = $items('Set Stage 5 Context')[0]?.json || {};\nconst actions = ($json.actions_taken || []).map(a => `\u2022 ${a}`).join('\\n');\nconst lines = [\n  `\u2615 Terry update: ${$json.status}`,\n  '',\n  $json.summary,\n];\nif (actions) lines.push('', 'Actions:', actions);\nreturn [{ json: {\n  chatId: context.telegramChatId,\n  text: lines.join('\\n') + `\\n\\nNext steps: ${$json.notification_message}`\n} }];\n"
      },
      "id": "3ecb7bc3-1a25-4491-9024-cbc2a619ad31",
      "name": "Format Status Message",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1.4,
      "position": [
        120,
        40
      ]
    },
    {
      "parameters": {
        "resource": "message",
        "operation": "sendMessage",
        "chatId": "={{ $json.chatId }}",
        "text": "={{ $json.text }}"
      },
      "id": "f135a606-148d-412d-bd0f-a0498a703609",
      "name": "Telegram Status",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        360,
        40
      ],
      "credentials": {
        "telegramApi": {
          "id": "__REPLACE_WITH_TELEGRAM_CREDENTIAL_ID__",
          "name": "Telegram (set me after import)"
        }
      }
    }
  ],
  "connections": {
    "Schedule Terry": {
      "main": [
        [
          {
            "node": "Set Stage 5 Context",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Stage 5 Context": {
      "main": [
        [
          {
            "node": "Terry Stage 5 Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Website Availability": {
      "ai_tool": [
        [
          {
            "node": "Terry Stage 5 Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Homelab Shell Tool": {
      "ai_tool": [
        [
          {
            "node": "Terry Stage 5 Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Think": {
      "ai_tool": [
        [
          {
            "node": "Terry Stage 5 Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Terry Stage 5 Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "Terry Stage 5 Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output": {
      "ai_outputParser": [
        [
          {
            "node": "Terry Stage 5 Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Terry Stage 5 Agent": {
      "main": [
        [
          {
            "node": "Needs Approval?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Needs Approval?": {
      "main": [
        [
          {
            "node": "Format Approval Message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Notify?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Notify?": {
      "main": [
        [
          {
            "node": "Format Status Message",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Format Approval Message": {
      "main": [
        [
          {
            "node": "Telegram Approval",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Status Message": {
      "main": [
        [
          {
            "node": "Telegram Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "tags": []
}